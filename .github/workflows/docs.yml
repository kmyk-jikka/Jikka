name: docs

on: [push, pull_request]

jobs:
  docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Haskell
        uses: haskell/actions/setup@v1
        with:
          enable-stack: true

      - uses: actions/cache@v2
        with:
          path: ~/.stack
          key: ${{ runner.os }}-stack-${{ hashFiles('stack.yaml') }}

      - name: Build dependencies
        run: stack --system-ghc build --only-dependencies

      - name: Run Haddock
        run: stack --system-ghc haddock --haddock-arguments --odir=docs/gh-pages/haddock

      - name: Make Gallery
        run: |
          python3 scripts/make_gallery.py > docs/gh-pages/gallery/data.json

      - name: Prepare for Asterius
        run: |
          sed -i 's/#ASTERIUS//' package.yaml
          stack --system-ghc build --only-configure
          stack --system-ghc install alex happy
          find src -name \*.x | xargs -n1 alex
          find src -name \*.x -delete
          find src -name \*.y | xargs -n1 happy
          find src -name \*.y -delete

      - name: Compile to WebAssembly
        run: |
          echo ahc-cabal new-update >> build.sh
          echo ahc-cabal new-build --flag compile-web-assembly >> build.sh
          echo ahc-cabal new-install --flag compile-web-assembly --installdir . >> build.sh
          echo ahc-dist --input-exe jikka-asterius --export-function=convert --no-main --input-mjs docs/gh-pages/playground/input.mjs --browser --output-directory docs/gh-pages/playground >> build.sh
          docker run --rm -v $(pwd):/workspace -w /workspace terrorjack/asterius bash build.sh

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/gh-pages
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
